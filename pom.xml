<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.microsoft.webapp.samples</groupId>
    <artifactId>Stateful-Tracker</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>war</packaging>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!-- Automatically use Git commit hash as version -->
        <version>${git.commit.id.describe}</version>

        <!-- SonarQube configuration -->
        <sonar.host.url>${env.SONAR_HOST_URL}</sonar.host.url>
        <sonar.login>${env.SONAR_TOKEN}</sonar.login>

        <!-- Nexus deployment configuration -->
        <nexus.url>${env.NEXUS_URL}</nexus.url>
        <staging.profile.id>${env.NEXUS_STAGING_PROFILE_ID}</staging.profile.id>

        <!-- Java version -->
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
    </properties>

    <dependencies>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>4.0.0</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>2.11.1</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>2.11.1</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!-- Compiler plugin to set the Java version -->
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.0</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>

            <!-- WAR Plugin to handle WAR packaging -->
            <plugin>
                <artifactId>maven-war-plugin</artifactId>
                <version>3.2.2</version>
                <configuration>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                </configuration>
            </plugin>

            <!-- Nexus Staging Plugin for deployment to Nexus -->
            <plugin>
                <groupId>org.sonatype.plugins</groupId>
                <artifactId>nexus-staging-maven-plugin</artifactId>
                <version>1.6.8</version>
                <configuration>
                    <serverId>nexus-releases</serverId>
                    <nexusUrl>${nexus.url}</nexusUrl>
                    <stagingProfileId>${staging.profile.id}</stagingProfileId>
                </configuration>
            </plugin>

            <!-- Maven Release Plugin to handle versioning -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <version>3.0.0-M1</version>
                <configuration>
                    <tagBase>https://github.com/yourrepo/yourproject/releases</tagBase>
                </configuration>
            </plugin>

            <!-- SonarQube Plugin for code analysis -->
            <plugin>
                <groupId>org.sonarsource.scanner.maven</groupId>
                <artifactId>sonar-maven-plugin</artifactId>
                <version>4.0.0.4121</version>
                <configuration>
                    <sonar.host.url>${sonar.host.url}</sonar.host.url>
                    <sonar.login>${sonar.login}</sonar.login>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <!-- Local environment profile -->
        <profile>
            <id>env-local</id>
            <activation>
                <property>
                    <name>env</name>
                    <value>local</value>
                </property>
            </activation>
            <properties>
                <deploy.env>local</deploy.env>
                <cargo.hostname>localhost</cargo.hostname>
                <cargo.servlet.port>8080</cargo.servlet.port>
                <cargo.tomcat.manager.url>http://localhost:8080/manager</cargo.tomcat.manager.url>
                <cargo.remote.username>admin</cargo.remote.username>
                <cargo.remote.password>admin</cargo.remote.password>
            </properties>
        </profile>

        <!-- Staging environment profile -->
        <profile>
            <id>env-staging</id>
            <activation>
                <property>
                    <name>env</name>
                    <value>staging</value>
                </property>
            </activation>
            <properties>
                <deploy.env>staging</deploy.env>
                <cargo.hostname>staging.example.com</cargo.hostname>
                <cargo.servlet.port>8080</cargo.servlet.port>
            </properties>
        </profile>

        <!-- Production environment profile -->
        <profile>
            <id>env-prod</id>
            <activation>
                <property>
                    <name>env</name>
                    <value>prod</value>
                </property>
            </activation>
            <properties>
                <deploy.env>prod</deploy.env>
                <cargo.hostname>prod.example.com</cargo.hostname>
                <cargo.servlet.port>8080</cargo.servlet.port>
            </properties>
        </profile>
    </profiles>

</project>

name: Java CI/CD to EC2

on:
  push:
    branches:
      - main  # Trigger workflow on push to main branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up JDK 11
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: '11'

      # Cache Sonar packages (optional)
      - name: Cache Sonar packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      # Build the Java project using Maven
      - name: Build with Maven
        run: mvn clean package
        working-directory: ./keyshellproject

      # List target directory to confirm .war creation
      - name: List target directory
        run: ls -l target
        working-directory: ./keyshellproject

      # Run SonarQube scan
      - name: Run SonarQube Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: mvn sonar:sonar -Dsonar.login=$SONAR_TOKEN -Dsonar.host.url=$SONAR_HOST_URL
        working-directory: ./keyshellproject

      # Upload WAR file as an artifact
      - name: Upload WAR file
        uses: actions/upload-artifact@v4
        with:
          name: java-app
          path: keyshellproject/target/*.war

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      # Download WAR file artifact
      - name: Download WAR file
        uses: actions/download-artifact@v4
        with:
          name: java-app
          path: target

      # Set up SSH key and known_hosts
      - name: Set up SSH key and known_hosts
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      # Deploy WAR file to Nexus
      - name: Deploy to Nexus
        env:
          NEXUS_URL: ${{ secrets.NEXUS_URL }}
          NEXUS_USERNAME: ${{ secrets.NEXUS_USERNAME }}
          NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
        run: |
          mvn deploy:deploy-file \
            -Durl=${{ secrets.NEXUS_URL }} \
            -DrepositoryId=nexus-releases \
            -Dfile=target/Stateful-Tracker-1.0.0-SNAPSHOT.war \
            -DgroupId=com.microsoft.webapp.samples \
            -DartifactId=Stateful-Tracker \
            -Dversion=${{ github.sha }} \
            -Dpackaging=war \
            -DgeneratePom=true \
            -Dusername=${{ secrets.NEXUS_USERNAME }} \
            -Dpassword=${{ secrets.NEXUS_PASSWORD }}

      # Deploy WAR to EC2 via SCP
      - name: Deploy WAR via SCP
        run: |
          scp -i ~/.ssh/id_rsa target/*.war ec2-user@${{ secrets.SSH_HOST }}:/home/ec2-user/

      # Copy WAR to Tomcat webapps directory
      - name: Copy WAR to Tomcat webapps
        run: |
          ssh -i ~/.ssh/id_rsa ec2-user@${{ secrets.SSH_HOST }} 'sudo cp /home/ec2-user/*.war /opt/tomcat/webapps/'
